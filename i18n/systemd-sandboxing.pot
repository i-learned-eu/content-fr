#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"POT-Creation-Date: 2022-06-16 15:04+0000\n"
"Plural-Forms: \n"

#: fr/systemd-sandboxing.md:0
msgid ""
"lang: fr\n"
"Author: Eban\n"
"Date: 2021/09/05\n"
"Keywords: linux, sandboxing, systemd, s√©curit√©\n"
"Slug: systemd-sandboxing\n"
"Summary: Si vous √™tre un utilisateur de Linux, vous connaissez s√ªrement "
"systemd, systemd est ce que l'on appelle un init, c'est le premier logiciel "
"lanc√© par le syst√®me d'exploitation et il est charg√© de d√©marrer tous les "
"autres. Pour √™tre d√©marr√© par systemd un logiciel doit √™tre reconnu comme "
"un service par systemd. Un service c'est un fichier qui d√©taille les "
"informations √† propos des logiciels √† lancer, comment les lancer, les "
"arr√™ter, leur nom, quels sont leurs d√©pendances et plus encore. systemd "
"propose des fonctionnalit√©s de s√©curit√© plut√¥t avanc√©es et tr√®s utiles pour "
"s√©curiser son syst√®me. C'est ces fonctionnalit√©s que nous d√©taillerons dans "
"cet article.\n"
"Title: Comment s√©curiser ses services systemd ?\n"
"Category: Cybers√©curit√©/Blue Team"
msgstr ""

#: fr/systemd-sandboxing.md:2
msgid ""
"Si vous √™tre un utilisateur de Linux, vous connaissez s√ªrement `systemd`, "
"systemd est ce que l'on appelle un init, c'est le premier logiciel lanc√© "
"par le syst√®me d'exploitation et il est charg√© de d√©marrer tous les autres. "
"Pour √™tre d√©marr√© par `systemd` un logiciel doit √™tre reconnu comme un "
"`service`. Un service c'est un fichier qui d√©taille les informations √† "
"propos des logiciels √† lancer, comment les lancer, les arr√™ter, leur nom, "
"quels sont leurs d√©pendances et plus encore. `systemd` propose des "
"fonctionnalit√©s de s√©curit√© plut√¥t avanc√©es et tr√®s utiles pour s√©curiser "
"son syst√®me. C'est ces fonctionnalit√©s que nous d√©taillerons dans cet "
"article."
msgstr ""

#: fr/systemd-sandboxing.md:4
msgid ""
"Dans cet article, nous s√©curiserons le service systemd de unbound, un "
"serveur DNS r√©solveur. Pour inspecter la s√©curit√© d'un service systemd, on "
"peut utiliser la commande `systemd-analyze security example.service`, "
"essayons donc avec le service systemd de unbound :"
msgstr ""

#: fr/systemd-sandboxing.md:6
msgid ""
"user@vm01:~$ systemd-analyze security unbound.service\n"
"‚Üí Overall exposure level for unbound.service: 9.5 UNSAFE üò®"
msgstr ""

#: fr/systemd-sandboxing.md:7
msgid ""
"9.5/10 en score d'exposition, y'a du boulot üòÖ. Jetons un oeil au service "
"systemd de Unbound."
msgstr ""

#: fr/systemd-sandboxing.md:9
msgid ""
"[Unit]\n"
"Description=Unbound DNS server # Description du service\n"
"Documentation=man:unbound(8) # Lien vers la documentation\n"
"After=network.target # D√©pendance, le service ne d√©mmarera que si "
"l'ordinateur est connect√© au r√©seau\n"
"Before=nss-lookup.target # Doit √™tre anc√© avant que les logiciels utilisant "
"DNS le soient\n"
"Wants=nss-lookup.target # Lance les logiciels utilisant DNS une fois que le "
"service unbound est lanc√©\n"
"\n"
"[Service]\n"
"Type=notify\n"
"Restart=on-failure # Red√©marre le service s'il rencontre une erreur\n"
"EnvironmentFile=-/etc/default/unbound # Fichier d'environnement Bash\n"
"ExecStartPre=-/usr/lib/unbound/package-helper chroot_setup # Commande √† "
"ex√©cuter avant de lancer unbound\n"
"ExecStartPre=-/usr/lib/unbound/package-helper root_trust_anchor_update # "
"Commande √† ex√©cuter avant de lancer unbound\n"
"ExecStart=/usr/sbin/unbound -d $DAEMON_OPTS # Commande √† ex√©cuter pour "
"lancer unbound\n"
"ExecReload=/usr/sbin/unbound-control reload # Commande √† ex√©cuter pour "
"recharger la configuration d'unbound\n"
"PIDFile=/run/unbound.pid # Emplacement du PID\n"
"\n"
"[Install]\n"
"WantedBy=multi-user.target"
msgstr ""

#: fr/systemd-sandboxing.md:10
msgid ""
"On a ici un service systemd tout ce qu'il y a de plus classique, si vous "
"n'avez pas l'habitude d'utiliser systemd, toutes les directives pr√©sentes "
"dans ce fichier sont comment√©es."
msgstr ""

#: fr/systemd-sandboxing.md:12
msgid ""
"Afin d'am√©liorer la s√©curit√© de ce service systemd, voici la liste des "
"diff√©rentes directives que nous pouvons ajouter"
msgstr ""

#: fr/systemd-sandboxing.md:16
msgid ""
"`AmbientCapabilities` permet de donner des capacit√©s au processus lors de "
"son lancement. Les capacit√©s permettent de donner des permissions √† "
"certains processus de fa√ßon plus pr√©cise que le syst√®me de permissions plus "
"classique de Linux. Elles permettent par exemple de donner le droit √† un "
"processus d'allouer des port en dessous de 1024 sans droits root."
msgstr ""

#: fr/systemd-sandboxing.md:19
msgid ""
"`CapabilityBoundingSet` permet de limiter les capacit√©s qui peuvent √™tre "
"donn√©es au processus. C'est une liste des capacit√©s qui peuvent √™tre "
"donn√©es au processus."
msgstr ""

#: fr/systemd-sandboxing.md:22
msgid ""
"`Group` et `User` permettent de sp√©cifier quel utilisateur et quel groupe "
"lance le logiciel, c'est une directive quasi indispensable pour s√©curiser "
"un service systemd."
msgstr ""

#: fr/systemd-sandboxing.md:25
msgid ""
"`LockPersonality` emp√™che le processus de changer de domaine d'ex√©cution. "
"Red Hat d√©finit tr√®s bien ce que sont les domaines d‚Äôex√©cution : pensez aux "
"domaines d'ex√©cution comme √† la \"personnalit√©\" d'un syst√®me "
"d'exploitation. √âtant donn√© que d'autres formats binaires, tels que "
"Solaris, UnixWare et FreeBSD, peuvent √™tre utilis√©s avec Linux, les "
"d√©veloppeurs peuvent changer la fa√ßon dont le syst√®me d'exploitation traite "
"les appels syst√®me (syscall) provenant de ces binaires en modifiant la "
"\"personnalit√©\" de la t√¢che."
msgstr ""

#: fr/systemd-sandboxing.md:28
msgid ""
"`NoNewPrivileges` emp√™che le processus d'obtenir de nouveaux privil√®ges, "
"cela permet d'√©viter qu'un attaquant puisse utiliser ce processus pour "
"gagner des privil√®ges suppl√©mentaires."
msgstr ""

#: fr/systemd-sandboxing.md:31
msgid ""
"`PrivateDevices` cr√©e un dossier /dev sp√©cifique √† ce service lui donnant "
"acc√®s aux pseudo-device (/dev/null, /dev/random etc.) mais pas aux device "
"physiques (/dev/sdaX, /dev/sdbX etc.)."
msgstr ""

#: fr/systemd-sandboxing.md:34
msgid "`PrivateTmp` cr√©e un dossier /tmp sp√©cifique √† ce service."
msgstr ""

#: fr/systemd-sandboxing.md:37
msgid "`ProtectClock` emp√™che le service de modifier l'horloge du syst√®me."
msgstr ""

#: fr/systemd-sandboxing.md:40
msgid ""
"`ProtectControlGroups` emp√™che le service de modifier/ajouter des "
"[cgroup](https://man7.org/linux/man-pages/man7/cgroups.7.html)."
msgstr ""

#: fr/systemd-sandboxing.md:43
msgid ""
"`ProtectHome` rend les r√©pertoires `/home/, /root, et /run/user` "
"inaccessibles et vides aux yeux du processus."
msgstr ""

#: fr/systemd-sandboxing.md:46
msgid "`ProtectKernelLogs` emp√™che le processus de lire les logs du kernel."
msgstr ""

#: fr/systemd-sandboxing.md:49
msgid "`ProtectKernelModules` emp√™che le processus de charger des modules kernel."
msgstr ""

#: fr/systemd-sandboxing.md:52
msgid ""
"`ProtectKernelTunables` emp√™che le processus d'√©crire dans les variables "
"kernel (souvent dans /sys)."
msgstr ""

#: fr/systemd-sandboxing.md:55
msgid "`ProtectSystem` monte les r√©pertoires /usr, /boot et /efi en lecture seul."
msgstr ""

#: fr/systemd-sandboxing.md:58
msgid ""
"`ReadWriteDirectories` d√©finit les r√©pertoires accessibles en √©criture et "
"en lecture aux processus ex√©cut√©s."
msgstr ""

#: fr/systemd-sandboxing.md:61
msgid ""
"`RestrictAddressFamilies` d√©finit les type d'adresse (adresses IPs, de "
"socket unix etc.) que le processus peut utiliser"
msgstr ""

#: fr/systemd-sandboxing.md:64
msgid ""
"`RestrictNamespaces` emp√™che le processus d'acc√©der √† n'importe quel "
"namespace. Un namespace, sous linux, est une sorte de conteneur (m√™me si le "
"terme n'est pas exact) qui permet d'isoler, en partie, des processus du "
"reste du syst√®me, cette directive emp√™che donc les processus du service "
"d'acc√©der √† d'autres namespaces que le sien. Pour en savoir plus, je vous "
"invite √† lire [cet article de Linux "
"Embedded](https://linuxembedded.fr/2020/11/namespaces-la-brique-de-base-des-"
"conteneurs)."
msgstr ""

#: fr/systemd-sandboxing.md:67
msgid ""
"`RestrictRealtime` emp√™che le processus d'utiliser des options relatives au "
"\"Syst√®me de planification en temps r√©el\" (real-time scheduling system) ce "
"syst√®me permet de planifier l'ex√©cution de diff√©rentes actions, mais il "
"peut √™tre abus√© afin de mener des attaques DoS (Denial of Service)."
msgstr ""

#: fr/systemd-sandboxing.md:70
msgid ""
"`RestrictSUIDSGID` permet d'emp√™cher le service de changer l'utilisateur ou "
"le groupe qui d√©tient un fichier ou un dossier."
msgstr ""

#: fr/systemd-sandboxing.md:73
msgid ""
"`SystemCallFilter` permet de n'autoriser que certains appels syst√®mes "
"(syscall)."
msgstr ""

#: fr/systemd-sandboxing.md:77
msgid ""
"√áa fait beaucoup de directives üòÖ Si vous souhaitez en avoir une liste plus "
"d√©taill√©e je vous invite √† lire [la documentation de "
"systemd](https://www.freedesktop.org/software/systemd/man/systemd.exec.html)"
". Appliquons maintenant toutes ces directives que nous venons de voir, cela "
"nous donne ce service systemd"
msgstr ""

#: fr/systemd-sandboxing.md:79
msgid ""
"[Unit]\n"
"Description=Unbound DNS server\n"
"Documentation=man:unbound(8)\n"
"After=network.target\n"
"Before=nss-lookup.target\n"
"Wants=nss-lookup.target\n"
"\n"
"[Service]\n"
"Type=notify\n"
"User=unbound\n"
"Group=unbound\n"
"Restart=on-failure\n"
"EnvironmentFile=-/etc/default/unbound\n"
"ExecStartPre=-/usr/lib/unbound/package-helper chroot_setup\n"
"ExecStartPre=-/usr/lib/unbound/package-helper root_trust_anchor_update\n"
"ExecStart=/usr/sbin/unbound -d $DAEMON_OPTS\n"
"ExecReload=/usr/sbin/unbound-control reload\n"
"PIDFile=/etc/unbound/unbound.pid\n"
"\n"
"AmbientCapabilities=CAP_NET_BIND_SERVICE\n"
"CapabilityBoundingSet=CAP_NET_BIND_SERVICE\n"
"SecureBits=keep-caps\n"
"NoNewPrivileges=yes\n"
"ProtectSystem=full\n"
"ProtectHome=true\n"
"RestrictNamespaces=true\n"
"RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6\n"
"PrivateTmp=true\n"
"PrivateDevices=true\n"
"ProtectClock=true\n"
"ProtectControlGroups=true\n"
"ProtectKernelTunables=true\n"
"ProtectKernelLogs=true\n"
"ProtectKernelModules=true\n"
"LockPersonality=true\n"
"RestrictSUIDSGID=true\n"
"RemoveIPC=true\n"
"RestrictRealtime=true\n"
"SystemCallFilter=@system-service\n"
"MemoryDenyWriteExecute=true\n"
"ReadWriteDirectories=/etc/unbound\n"
"\n"
"[Install]\n"
"WantedBy=multi-user.target"
msgstr ""

#: fr/systemd-sandboxing.md:80
msgid ""
"Et tout cela nous donne un score d'exposition de 1.9/10 ! üéâ Vous pourrez "
"retrouver une liste de services systemd les plus communs \"renforc√©s\" [sur "
"le gitea d'I "
"Learned](https://gitlab.ilearned.eu/i-learned/blog/Systemd-hardened), si "
"vous voyez qu'il manque certains services n'h√©sitez pas √† les ajouter en "
"faisant une pull request ou en cr√©ant un ticket."
msgstr ""