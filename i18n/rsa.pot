#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"POT-Creation-Date: 2022-06-17 12:13+0000\n"
"Plural-Forms: \n"

#: fr/rsa.md:0
msgid ""
"lang: fr\n"
"Author: Eban\n"
"Date: 2021/11/14\n"
"Keywords: cryptographie, s√©curit√©\n"
"Slug: rsa\n"
"Summary: RSA est s√ªrement l'algorithme de chiffrement asym√©trique le plus "
"connu, il est utilis√© chaque jour par des millions d'appareils, m√™me le "
"certificat TLS du site que vous visitez en ce moment est bas√© sur RSA ! Cet "
"article d√©taillera le fonctionnement math√©matique de RSA, aucun pr√©-requis "
"n'est n√©cessaire (√† part peut-√™tre une tasse de caf√© ‚òï).\n"
"Title: RSA, comment √ßa marche ?\n"
"Category: Cybers√©curit√©/Cryptographie"
msgstr ""

#: fr/rsa.md:2
msgid ""
"RSA est s√ªrement l'algorithme de chiffrement asym√©trique le plus connu, il "
"est utilis√© chaque jour par des millions d'appareils, m√™me le certificat "
"TLS du site que vous visitez en ce moment est bas√© sur RSA ! Cet article "
"d√©taillera le fonctionnement math√©matique de RSA, aucun pr√©requis n'est "
"n√©cessaire (√† part peut-√™tre une tasse de caf√© ‚òï)."
msgstr ""

#: fr/rsa.md:4
msgid "La cryptographie asym√©trique, qu'est-ce que c'est ?"
msgstr ""

#: fr/rsa.md:5
msgid "Il existe deux types d'algorithmes de chiffrement"
msgstr ""

#: fr/rsa.md:9
msgid ""
"Les algorithmes de chiffrement **sym√©triques** : ils impliquent d'avoir un "
"secret (un \"mot de passe\") partag√© entre les diff√©rents appareils. Ce "
"genre d'algorithme a pour avantage d'√™tre plut√¥t rapide mais a pour "
"inconv√©nient, et pas des moindres, de devoir avoir un canal s√©curis√© pour "
"transmettre le secret."
msgstr ""

#: fr/rsa.md:12
msgid ""
"Les algorithmes de chiffrement **asym√©triques** : ces algorithmes, dont RSA "
"fait partie, ne n√©cessitent pas de partager un secret √† l'avance. Ils se "
"basent sur une paire de cl√©s (une publique et une priv√©e) li√©es "
"math√©matiquement. Cet algorithme a donc pour avantage de ne pas n√©cessiter "
"un canal s√©curis√© pour initier la connexion, mais pour inconv√©nient d'√™tre "
"nettement moins rapide que les algorithmes de chiffrement sym√©triques."
msgstr ""

#: fr/rsa.md:16
msgid "Alors, comment fonctionne RSA ?"
msgstr ""

#: fr/rsa.md:17
msgid ""
"Cette partie sera un peu plus math√©matique mais devrait √™tre accessible "
"pour tout le monde. Si vous avez des questions, n'h√©sitez pas √† les poser "
"dans les commentaires en bas de cet article !"
msgstr ""

#: fr/rsa.md:19
msgid "G√©n√©ration des cl√©s"
msgstr ""

#: fr/rsa.md:22
msgid ""
"On choisit deux nombres premier distincts $p$ et $q$ (pour rappel, un "
"nombre premier est un nombre qui n'a que deux diviseurs, 1 et lui-m√™me.)"
msgstr ""

#: fr/rsa.md:24
msgid "$$p = 5 \\\\"
msgstr ""

#: fr/rsa.md:25
msgid "q = 13$$"
msgstr ""

#: fr/rsa.md:28
msgid "On calcule $n$ le produit de $p$ et $q$."
msgstr ""

#: fr/rsa.md:30
msgid "$$n = 5√ó13 \\\\"
msgstr ""

#: fr/rsa.md:31
msgid "n = 65$$"
msgstr ""

#: fr/rsa.md:34
msgid ""
"On calcule la *valeur indicatrice d'Euler* en $n$. *L'indicaquoi ?* ü§® La "
"valeur indicatrice d'Euler c'est une fonction not√©e $\\phi$ qui, √† tout "
"entier naturel $n$ associe le nombre d'entiers naturels compris entre 1 et "
"$n$ et premiers avec $n$. *Premier avec ?* ü§î Quand deux nombres sont "
"premiers entre eux, √ßa veut simplement dire qu'ils n'ont aucun [facteur "
"premier](http://www.recreomath.qc.ca/am_facteur.htm) en commun."
msgstr ""

#: fr/rsa.md:36
msgid ""
"Par exemple, 12 est premier avec 5 car dans la d√©composition en facteurs "
"premiers de 12 ($2\\times2\\times3$) on ne retrouve pas 5"
msgstr ""

#: fr/rsa.md:38
msgid ""
"Voici un petit exemple de la valeur indicatrice d'Euler qui devrait vous "
"permettre de bien comprendre :"
msgstr ""

#: fr/rsa.md:40
msgid "$$\\phi(12) = 4 \\\\ \\small{(1, 5, 7, 11)}$$"
msgstr ""

#: fr/rsa.md:42
msgid "Les nombres 1, 5, 7 et 11 sont bien premiers avec 12."
msgstr ""

#: fr/rsa.md:44
msgid "Nous allons donc calculer la valeur indicatrice d'Euler en $n$."
msgstr ""

#: fr/rsa.md:45
msgid "Pour calculer cette derni√®re, il faut connaitre les propri√©t√©s suivantes :"
msgstr ""

#: fr/rsa.md:47
msgid "$$\\phi(a\\times b) = \\phi(a)\\times \\phi(b)$$"
msgstr ""

#: fr/rsa.md:49
msgid "Pour n'importe quel nombre premier c, $\\phi(c)=c-1$"
msgstr ""

#: fr/rsa.md:51
msgid ""
"Avec ces deux propri√©t√©s en t√™te et sachant que p et q sont deux nombres "
"premiers, on peut affirmer que"
msgstr ""

#: fr/rsa.md:53
msgid "$$\\phi(p) =p - 1 \\\\"
msgstr ""

#: fr/rsa.md:54
msgid "\\phi(q) = q-1 \\\\"
msgstr ""

#: fr/rsa.md:55
msgid "\\phi(n) = \\phi(p \\times q) = \\phi(p) \\times \\phi(q) \\\\"
msgstr ""

#: fr/rsa.md:56
msgid "\\phi(n) = (p - 1) \\times (q - 1)$$"
msgstr ""

#: fr/rsa.md:58
msgid "On remplace par nos valeurs d'exemple"
msgstr ""

#: fr/rsa.md:60
msgid "$$\\phi(5) = 5 - 1 \\\\"
msgstr ""

#: fr/rsa.md:61
msgid "\\phi(13) = 13-1 \\\\"
msgstr ""

#: fr/rsa.md:62
msgid "\\phi(5 \\times 13) = \\phi(5)*\\phi(13) \\\\"
msgstr ""

#: fr/rsa.md:63
msgid "\\phi(65) = (5 - 1)(13 - 1) \\\\"
msgstr ""

#: fr/rsa.md:64
msgid "\\phi(65) = 4*12 \\\\"
msgstr ""

#: fr/rsa.md:65
msgid "\\phi(65) = 48 \\\\"
msgstr ""

#: fr/rsa.md:66
#: fr/rsa.md:93
msgid "$$"
msgstr ""

#: fr/rsa.md:69
msgid ""
"On choisit un entier naturel $e$ premier avec $\\phi(n)$ (qui est donc ici "
"48)."
msgstr ""

#: fr/rsa.md:71
msgid "$$e ="
msgstr ""

#: fr/rsa.md:72
msgid "5$$"
msgstr ""

#: fr/rsa.md:75
msgid ""
"On calcule $d$, l'inverse modulaire de $e$ modulo $n$. *L'inverse modulaire "
"? Modulo ? Qu'est-ce que c'est ces trucs ?* üßê"
msgstr ""

#: fr/rsa.md:76
msgid ""
"Pour comprendre le concept d'inverse modulaire, il est n√©cessaire de "
"comprendre ce qu'est la congruence sur les entiers. Deux entiers $a$ et $b$ "
"sont dits congrus modulo $n$ si le reste de la division euclidienne de $a$ "
"par $n$ et de $b$ par $n$ est identique. Par exemple 33 et 9 sont dits "
"congrus modulo 12 car le reste de la division euclidienneHee de 33 par 12 "
"est 9, et que le reste de la division euclidienne de 9 par 12 est 9. On "
"note cela de la fa√ßon suivante :"
msgstr ""

#: fr/rsa.md:78
msgid "$$33 \\equiv 9 \\mod{12} \\\\"
msgstr ""

#: fr/rsa.md:79
msgid "\\small\\textit{33 et 9 sont congrus modulo 12}$$"
msgstr ""

#: fr/rsa.md:81
msgid ""
"Une autre fa√ßon de se repr√©senter la chose serait d'imaginer une horloge "
"(avec donc 12 heures), si on fait tourner l'aiguille des heures de 9 heures "
"ou de 33, elle se retrouvera au m√™me endroit √† la fin."
msgstr ""

#: fr/rsa.md:83
msgid ""
"![Horloge tournant 33 heures et horloge tournant 9 "
"heurs](/static/img/rsa/clock.gif)"
msgstr ""

#: fr/rsa.md:85
msgid ""
"Donc, calculer l'inverse modulaire d'un entier $a$ modulo $n$ c'est trouver "
"un entier $u$ r√©solvant l'√©quation :"
msgstr ""

#: fr/rsa.md:87
msgid "$$au \\equiv 1 \\mod{n}$$"
msgstr ""

#: fr/rsa.md:89
msgid ""
"Ce qui revient donc √† chercher un nombre $u$ tel que le reste de la "
"division euclidienne de $a \\times u$ par n soit √©gal au reste de la "
"division euclidienne de 1 par $e$."
msgstr ""

#: fr/rsa.md:91
msgid ""
"Comment d√©terminer $u$ ? Et bien pas de formule magique, il suffit de "
"bruteforcer tous les nombres entiers entre 0 et $n$. On note cela :"
msgstr ""

#: fr/rsa.md:94
msgid "u \\in~ ‚ü¶0~;~n‚üß$$"
msgstr ""

#: fr/rsa.md:96
msgid ""
"Dans notre exemple, on veut calculer l'inverse modulaire de $e$ modulo "
"$\\phi(p\\times q)$. On fait donc"
msgstr ""

#: fr/rsa.md:98
msgid "$$5d \\equiv 1 \\mod{48} \\\\"
msgstr ""

#: fr/rsa.md:99
msgid "5*29\\equiv 1 \\mod 48 \\\\"
msgstr ""

#: fr/rsa.md:100
msgid "d = 29$$"
msgstr ""

#: fr/rsa.md:102
msgid ""
"Et c'est fini ! On a nos cl√©s publiques et priv√©es. Le couple (n,e) est "
"notre cl√© publique et le nombre d notre cl√© priv√©e."
msgstr ""

#: fr/rsa.md:106
msgid "Chiffrement d'un message"
msgstr ""

#: fr/rsa.md:107
msgid ""
"Maintenant que l'on a notre paire de cl√©s, on peut chiffrer notre premier "
"message."
msgstr ""

#: fr/rsa.md:109
msgid ""
"Soit M, le message que l'on souhaite chiffrer strictement inf√©rieur √† n, on "
"calcule C le message chiffr√© de la fa√ßon suivante."
msgstr ""

#: fr/rsa.md:111
msgid "$$M^{e}\\equiv C \\mod n$$"
msgstr ""

#: fr/rsa.md:113
msgid "Exemple avec M = 42"
msgstr ""

#: fr/rsa.md:115
msgid ""
"$$42^{5}\\equiv C \\mod 65 \\\\\n"
"42^5 \\equiv 22 \\mod 65$$"
msgstr ""

#: fr/rsa.md:117
msgid "Le message chiffr√© pour notre cl√© publique est donc 22"
msgstr ""

#: fr/rsa.md:119
msgid "D√©chiffrement d'un message"
msgstr ""

#: fr/rsa.md:120
msgid ""
"Une fois notre message chiffr√©, on peut le d√©chiffrer en appliquant la "
"formule suivante :"
msgstr ""

#: fr/rsa.md:122
msgid ""
"$$M \\equiv C^d \\mod n \\\\\n"
"M \\equiv 22^{29} \\mod 65 \\\\\n"
"M = 42$$"
msgstr ""

#: fr/rsa.md:124
msgid "D√©cryptage d'un message"
msgstr ""

#: fr/rsa.md:125
msgid ""
"*Petit rappel, d√©crypter un message consiste √† d√©terminer le contenu du dit "
"message sans connaitre la cl√© utilis√©e pour le chiffrer.*"
msgstr ""

#: fr/rsa.md:127
msgid ""
"Pour d√©crypter un message, il faut trouver l'inverse modulaire de $e$ "
"modulo $n$ ce qui n'est pas possible sans conna√Ætre $p$ et $q$. Le seul "
"moyen est donc bruteforcer en v√©rifiant pour chaque nombre qu'il est "
"premier, mais aussi que le produit de ces deux nombres n'est pas "
"factorisable."
msgstr ""

#: fr/rsa.md:129
msgid "Conclusion"
msgstr ""

#: fr/rsa.md:130
msgid ""
"La robustesse de RSA se base donc sur la complexit√© calculatoire des "
"algorithmes de v√©rification de primaut√© de tr√®s grands nombres. Le probl√®me "
"est que pour cr√©er des cl√©s toujours plus robustes, il faut augmenter la "
"taille de la cl√© ce qui peut devenir contraignant. Afin de r√©pondre √† cette "
"probl√©matique, et √† d'autres que nous aborderons plus tard, ont √©t√© "
"introduites des fonctions de chiffrement asym√©trique bas√©es sur les courbes "
"elliptiques."
msgstr ""